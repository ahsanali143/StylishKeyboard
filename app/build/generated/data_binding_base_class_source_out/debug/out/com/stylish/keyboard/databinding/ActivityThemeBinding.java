// Generated by view binder compiler. Do not edit!
package com.stylish.keyboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.ads.AdView;
import com.stylish.keyboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityThemeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout activityTheme;

  @NonNull
  public final AdView adView;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final ImageButton theme10ImageButton;

  @NonNull
  public final ImageButton theme1ImageButton;

  @NonNull
  public final ImageButton theme2ImageButton;

  @NonNull
  public final ImageButton theme3ImageButton;

  @NonNull
  public final ImageButton theme4ImageButton;

  @NonNull
  public final ImageButton theme5ImageButton;

  @NonNull
  public final ImageButton theme6ImageButton;

  @NonNull
  public final ImageButton theme7ImageButton;

  @NonNull
  public final ImageButton theme8ImageButton;

  @NonNull
  public final ImageButton theme9ImageButton;

  private ActivityThemeBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout activityTheme, @NonNull AdView adView, @NonNull ScrollView scrollView,
      @NonNull ImageButton theme10ImageButton, @NonNull ImageButton theme1ImageButton,
      @NonNull ImageButton theme2ImageButton, @NonNull ImageButton theme3ImageButton,
      @NonNull ImageButton theme4ImageButton, @NonNull ImageButton theme5ImageButton,
      @NonNull ImageButton theme6ImageButton, @NonNull ImageButton theme7ImageButton,
      @NonNull ImageButton theme8ImageButton, @NonNull ImageButton theme9ImageButton) {
    this.rootView = rootView;
    this.activityTheme = activityTheme;
    this.adView = adView;
    this.scrollView = scrollView;
    this.theme10ImageButton = theme10ImageButton;
    this.theme1ImageButton = theme1ImageButton;
    this.theme2ImageButton = theme2ImageButton;
    this.theme3ImageButton = theme3ImageButton;
    this.theme4ImageButton = theme4ImageButton;
    this.theme5ImageButton = theme5ImageButton;
    this.theme6ImageButton = theme6ImageButton;
    this.theme7ImageButton = theme7ImageButton;
    this.theme8ImageButton = theme8ImageButton;
    this.theme9ImageButton = theme9ImageButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityThemeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityThemeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_theme, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityThemeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout activityTheme = (RelativeLayout) rootView;

      id = R.id.adView;
      AdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.theme10_imageButton;
      ImageButton theme10ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme10ImageButton == null) {
        break missingId;
      }

      id = R.id.theme1_imageButton;
      ImageButton theme1ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme1ImageButton == null) {
        break missingId;
      }

      id = R.id.theme2_imageButton;
      ImageButton theme2ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme2ImageButton == null) {
        break missingId;
      }

      id = R.id.theme3_imageButton;
      ImageButton theme3ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme3ImageButton == null) {
        break missingId;
      }

      id = R.id.theme4_imageButton;
      ImageButton theme4ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme4ImageButton == null) {
        break missingId;
      }

      id = R.id.theme5_imageButton;
      ImageButton theme5ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme5ImageButton == null) {
        break missingId;
      }

      id = R.id.theme6_imageButton;
      ImageButton theme6ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme6ImageButton == null) {
        break missingId;
      }

      id = R.id.theme7_imageButton;
      ImageButton theme7ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme7ImageButton == null) {
        break missingId;
      }

      id = R.id.theme8_imageButton;
      ImageButton theme8ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme8ImageButton == null) {
        break missingId;
      }

      id = R.id.theme9_imageButton;
      ImageButton theme9ImageButton = ViewBindings.findChildViewById(rootView, id);
      if (theme9ImageButton == null) {
        break missingId;
      }

      return new ActivityThemeBinding((RelativeLayout) rootView, activityTheme, adView, scrollView,
          theme10ImageButton, theme1ImageButton, theme2ImageButton, theme3ImageButton,
          theme4ImageButton, theme5ImageButton, theme6ImageButton, theme7ImageButton,
          theme8ImageButton, theme9ImageButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
